## NOTE: This is a work in progress.
## It is not understood how the port binding is working.

networks:
  my-mongo-cluster:
    driver: bridge

services:
  mongo1:
    hostname: mongo1
    image: mongo
    container_name: mongo1
    networks:
      - my-mongo-cluster
    ports:
      - "27017:27017"
    restart: always
    entrypoint: mongod --replSet rs0 --bind_ip localhost,mongo1
  mongo2:
    hostname: mongo2
    image: mongo
    container_name: mongo2
    networks:
      - my-mongo-cluster
    ports:
      - "27018:27017"
    restart: always
    entrypoint: mongod --replSet rs0 --bind_ip localhost,mongo2
  mongo3:
    hostname: mongo3
    image: mongo
    container_name: mongo3
    networks:
      - my-mongo-cluster
    ports:
      - "27019:27017"
    restart: always
    entrypoint: mongod --replSet rs0 --bind_ip localhost,mongo3
  mongo-init:
    container_name: mongo-init  
    image: mongo
    networks:
      - my-mongo-cluster
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      bash -c "until mongosh --host mongo1:27017 --eval 'print(\"waited for connection\")'; do sleep 2; done;
      mongosh --host mongo1:27017 --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongo1:27017\" }, { _id: 1, host: \"mongo2:27017\" }, { _id: 2, host: \"mongo3:27017\" }]})'"
